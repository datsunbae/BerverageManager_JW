/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;


import BUS.CTNHAPKHO_BUS;
import BUS.DonVi_BUS;
import BUS.NhanVien_BUS;
import BUS.NhaCungCap_BUS;
import BUS.NhapKho_BUS;
import BUS.SanPham_BUS;
import BUS.TonKho_BUS;
import DTO.CT_NhapKho_DTO;
import DTO.DonVi_DTO;
import DTO.NhanVien_DTO;
import DTO.NhaCungCap_DTO;
import DTO.NhapKho_DTO;
import DTO.SanPham_DTO;
import DTO.TonKho_DTO;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author datsu
 */
public class JF_Order extends javax.swing.JFrame {

    /**
     * Creates new form JF_Customer
     */
    DefaultTableModel defaultTableModel_PNK;
    DefaultTableModel defaultTableModel_CTPNK;
    SanPham_DTO product_DTO;
    NhanVien_BUS staff_BUS;
    NhaCungCap_BUS supplier_BUS;
    SanPham_BUS product_BUS;
    DonVi_BUS dv_BUS;
    NhapKho_BUS nk_BUS;
    TonKho_BUS tk_BUS;
    CTNHAPKHO_BUS ctnk_BUS;
    List<NhaCungCap_DTO> list_Supplier;
    List<NhanVien_DTO> list_Staff;
    List<SanPham_DTO> list_Product;
    List<DonVi_DTO> list_DV;
    List<NhapKho_DTO> list_NK;
    List<TonKho_DTO> list_TK;
    SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
    SimpleDateFormat dateFormatSQL = new SimpleDateFormat("yyyy/MM/dd");
    
    
    int checkSPTT_TonKho = 0;
    
    public JF_Order() {
        initComponents();
        
        //giao dien
        JTB_PNK.getTableHeader().setFont(new Font("Segoe UI", Font.PLAIN, 15));
        JTB_PNK.getTableHeader().setForeground(Color.black);
        JTB_PNK.getTableHeader().setPreferredSize(new Dimension(1234, 40));

        JTB_PNK.getColumnModel().getColumn(0).setPreferredWidth(100);
        JTB_PNK.getColumnModel().getColumn(0).setMaxWidth(100);
        
        
        JTB_CTPNK.getTableHeader().setFont(new Font("Segoe UI", Font.PLAIN, 15));
        JTB_CTPNK.getTableHeader().setForeground(Color.black);
        JTB_CTPNK.getTableHeader().setPreferredSize(new Dimension(1234, 40));

        JTB_CTPNK.getColumnModel().getColumn(0).setPreferredWidth(70);
        JTB_CTPNK.getColumnModel().getColumn(0).setMaxWidth(70);
        
        JTB_CTPNK.getColumnModel().getColumn(2).setPreferredWidth(75);
        JTB_CTPNK.getColumnModel().getColumn(2).setMaxWidth(75);
        
        JTB_CTPNK.getColumnModel().getColumn(3).setPreferredWidth(75);
        JTB_CTPNK.getColumnModel().getColumn(3).setMaxWidth(75);
        
        JCB_DVTC.setEnabled(false);
        
        //
        product_DTO = new SanPham_DTO();
        supplier_BUS = new NhaCungCap_BUS();
        staff_BUS = new NhanVien_BUS();
        product_BUS = new SanPham_BUS();
        nk_BUS = new NhapKho_BUS();
        ctnk_BUS = new CTNHAPKHO_BUS();
        tk_BUS = new TonKho_BUS();
        defaultTableModel_PNK = (DefaultTableModel) JTB_PNK.getModel();
        defaultTableModel_CTPNK = (DefaultTableModel) JTB_CTPNK.getModel();
        dv_BUS = new DonVi_BUS();
        list_DV = dv_BUS.getAllDVTChinh();
        list_Supplier = supplier_BUS.getAllSupplier();
        list_Staff = staff_BUS.getAllStaff();
        list_TK = tk_BUS.getAllTonKho();
        
        Date date = new Date(); 
        JDC_Date.setDate(date);
        
        LoadCBDatat(); 
        eventChangeCBProduct();
        
        LoadDataTableNhapKho(nk_BUS.getAllPhieuNhapKho()); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        JTxt_Header1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        JTF_SLDVTC = new GUI.JTextFieldCustom();
        jLabel1 = new javax.swing.JLabel();
        JCB_Supplier = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        JCB_Staff = new javax.swing.JComboBox<>();
        JLB_DVT = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        JTB_CTPNK = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        JCB_DVTC = new javax.swing.JComboBox<>();
        JDC_Date = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        JCB_Product = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        JBTN_AddOrder = new com.k33ptoo.components.KButton();
        JBtn_BackHome = new com.k33ptoo.components.KButton();
        JBTN_ConfirmOrder = new com.k33ptoo.components.KButton();
        JBTN_OrderNew = new com.k33ptoo.components.KButton();
        JBTN_DeleteCTPNK = new com.k33ptoo.components.KButton();
        JBTN_CTNK = new com.k33ptoo.components.KButton();
        JBTN_SearchPNK = new javax.swing.JLabel();
        JDC_DateSearchPNK = new com.toedter.calendar.JDateChooser();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTB_PNK = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.CardLayout());

        jPanel4.setBackground(new java.awt.Color(255, 153, 0));
        jPanel4.setPreferredSize(new java.awt.Dimension(1329, 93));

        JTxt_Header1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        JTxt_Header1.setForeground(new java.awt.Color(255, 255, 255));
        JTxt_Header1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JTxt_Header1.setText("QUẢN LÝ NHẬP KHO");
        JTxt_Header1.setPreferredSize(new java.awt.Dimension(1236, 93));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JTxt_Header1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(JTxt_Header1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(245, 245, 245));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel1.setText("Tên nhà cung cấp:");

        JCB_Supplier.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        JCB_Supplier.setBorder(null);
        JCB_Supplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCB_SupplierActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel6.setText("Số lượng:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel7.setText("Tên nhân viên:");

        JCB_Staff.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        JCB_Staff.setBorder(null);

        JLB_DVT.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        JLB_DVT.setText("THÙNG");

        jPanel5.setLayout(new java.awt.CardLayout());

        JTB_CTPNK.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        JTB_CTPNK.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MSP", "Tên SP", "Số lượng", "ĐVT", "Thành tiền"
            }
        ));
        JTB_CTPNK.setGridColor(new java.awt.Color(204, 204, 204));
        JTB_CTPNK.setRowHeight(40);
        jScrollPane3.setViewportView(JTB_CTPNK);

        jPanel5.add(jScrollPane3, "card2");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel10.setText("Ngày lập:");

        JCB_DVTC.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        JCB_DVTC.setBorder(null);
        JCB_DVTC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCB_DVTCActionPerformed(evt);
            }
        });

        JDC_Date.setDateFormatString("dd/MM/yyyy");
        JDC_Date.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel11.setText("Đơn vị tính:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel8.setText("Sản phẩm:");

        JCB_Product.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        JCB_Product.setBorder(null);
        JCB_Product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCB_ProductActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(40, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JCB_Staff, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel11)))
                                .addGap(264, 264, 264))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(JCB_Supplier, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(JCB_Product, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel8))
                                .addGap(43, 43, 43)
                                .addComponent(JDC_Date, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(JTF_SLDVTC, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(JLB_DVT))
                                .addComponent(JCB_DVTC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(45, 45, 45)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JCB_Supplier, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JCB_Staff, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel10))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(JDC_Date, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JCB_Product, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JCB_DVTC, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JTF_SLDVTC, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(JLB_DVT))
                .addGap(14, 14, 14))
        );

        jPanel7.setBackground(new java.awt.Color(245, 245, 245));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        JBTN_AddOrder.setText("Thêm");
        JBTN_AddOrder.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        JBTN_AddOrder.setkBackGroundColor(new java.awt.Color(255, 102, 0));
        JBTN_AddOrder.setkBorderRadius(30);
        JBTN_AddOrder.setkEndColor(new java.awt.Color(255, 153, 0));
        JBTN_AddOrder.setkHoverEndColor(new java.awt.Color(255, 153, 0));
        JBTN_AddOrder.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        JBTN_AddOrder.setkHoverStartColor(new java.awt.Color(255, 102, 0));
        JBTN_AddOrder.setkSelectedColor(new java.awt.Color(255, 102, 0));
        JBTN_AddOrder.setkStartColor(new java.awt.Color(255, 153, 0));
        JBTN_AddOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBTN_AddOrderActionPerformed(evt);
            }
        });
        jPanel7.add(JBTN_AddOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 160, -1));

        JBtn_BackHome.setText("Về trang chủ");
        JBtn_BackHome.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        JBtn_BackHome.setkBackGroundColor(new java.awt.Color(255, 102, 0));
        JBtn_BackHome.setkBorderRadius(30);
        JBtn_BackHome.setkEndColor(new java.awt.Color(51, 153, 255));
        JBtn_BackHome.setkHoverEndColor(new java.awt.Color(51, 102, 255));
        JBtn_BackHome.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        JBtn_BackHome.setkHoverStartColor(new java.awt.Color(51, 102, 255));
        JBtn_BackHome.setkSelectedColor(new java.awt.Color(255, 102, 0));
        JBtn_BackHome.setkStartColor(new java.awt.Color(51, 153, 255));
        JBtn_BackHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtn_BackHomeActionPerformed(evt);
            }
        });
        jPanel7.add(JBtn_BackHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 320, 160, -1));

        JBTN_ConfirmOrder.setText("Xác nhận");
        JBTN_ConfirmOrder.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        JBTN_ConfirmOrder.setkBackGroundColor(new java.awt.Color(255, 102, 0));
        JBTN_ConfirmOrder.setkBorderRadius(30);
        JBTN_ConfirmOrder.setkEndColor(new java.awt.Color(255, 153, 0));
        JBTN_ConfirmOrder.setkHoverEndColor(new java.awt.Color(255, 153, 0));
        JBTN_ConfirmOrder.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        JBTN_ConfirmOrder.setkHoverStartColor(new java.awt.Color(255, 102, 0));
        JBTN_ConfirmOrder.setkSelectedColor(new java.awt.Color(255, 102, 0));
        JBTN_ConfirmOrder.setkStartColor(new java.awt.Color(255, 153, 0));
        JBTN_ConfirmOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBTN_ConfirmOrderActionPerformed(evt);
            }
        });
        jPanel7.add(JBTN_ConfirmOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 160, -1));

        JBTN_OrderNew.setText("Tạo đơn mới");
        JBTN_OrderNew.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        JBTN_OrderNew.setkBackGroundColor(new java.awt.Color(255, 102, 0));
        JBTN_OrderNew.setkBorderRadius(30);
        JBTN_OrderNew.setkEndColor(new java.awt.Color(255, 153, 0));
        JBTN_OrderNew.setkHoverEndColor(new java.awt.Color(255, 153, 0));
        JBTN_OrderNew.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        JBTN_OrderNew.setkHoverStartColor(new java.awt.Color(255, 102, 0));
        JBTN_OrderNew.setkSelectedColor(new java.awt.Color(255, 102, 0));
        JBTN_OrderNew.setkStartColor(new java.awt.Color(255, 153, 0));
        JBTN_OrderNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBTN_OrderNewActionPerformed(evt);
            }
        });
        jPanel7.add(JBTN_OrderNew, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 200, 160, -1));

        JBTN_DeleteCTPNK.setText("Xóa");
        JBTN_DeleteCTPNK.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        JBTN_DeleteCTPNK.setkBackGroundColor(new java.awt.Color(255, 102, 0));
        JBTN_DeleteCTPNK.setkBorderRadius(30);
        JBTN_DeleteCTPNK.setkEndColor(new java.awt.Color(255, 153, 0));
        JBTN_DeleteCTPNK.setkHoverEndColor(new java.awt.Color(255, 153, 0));
        JBTN_DeleteCTPNK.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        JBTN_DeleteCTPNK.setkHoverStartColor(new java.awt.Color(255, 102, 0));
        JBTN_DeleteCTPNK.setkSelectedColor(new java.awt.Color(255, 102, 0));
        JBTN_DeleteCTPNK.setkStartColor(new java.awt.Color(255, 153, 0));
        JBTN_DeleteCTPNK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBTN_DeleteCTPNKActionPerformed(evt);
            }
        });
        jPanel7.add(JBTN_DeleteCTPNK, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 160, -1));

        JBTN_CTNK.setText("Xem");
        JBTN_CTNK.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        JBTN_CTNK.setkBackGroundColor(new java.awt.Color(255, 102, 0));
        JBTN_CTNK.setkBorderRadius(30);
        JBTN_CTNK.setkEndColor(new java.awt.Color(255, 153, 0));
        JBTN_CTNK.setkHoverEndColor(new java.awt.Color(255, 153, 0));
        JBTN_CTNK.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        JBTN_CTNK.setkHoverStartColor(new java.awt.Color(255, 102, 0));
        JBTN_CTNK.setkSelectedColor(new java.awt.Color(255, 102, 0));
        JBTN_CTNK.setkStartColor(new java.awt.Color(255, 153, 0));
        JBTN_CTNK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBTN_CTNKActionPerformed(evt);
            }
        });
        jPanel7.add(JBTN_CTNK, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, 160, -1));

        JBTN_SearchPNK.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JBTN_SearchPNK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icon_search.png"))); // NOI18N
        JBTN_SearchPNK.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        JBTN_SearchPNK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JBTN_SearchPNKMouseClicked(evt);
            }
        });

        JDC_DateSearchPNK.setDateFormatString("dd/MM/yyyy");
        JDC_DateSearchPNK.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(JDC_DateSearchPNK, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JBTN_SearchPNK, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JDC_DateSearchPNK, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JBTN_SearchPNK, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setLayout(new java.awt.CardLayout());

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        JTB_PNK.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        JTB_PNK.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MPNK", "Ngày nhập", "Nhân viên", "Nhà cung cấp", "Tổng tiền"
            }
        ));
        JTB_PNK.setGridColor(new java.awt.Color(204, 204, 204));
        JTB_PNK.setRowHeight(40);
        JTB_PNK.setSelectionBackground(new java.awt.Color(153, 153, 153));
        JTB_PNK.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        JTB_PNK.setShowGrid(false);
        jScrollPane1.setViewportView(JTB_PNK);

        jPanel6.add(jScrollPane1, "card2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 1234, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, "card2");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    public String getMaDV(String tenDV){
        for(DonVi_DTO dv : list_DV){
            if(dv.getTenDV().compareTo(tenDV) == 0){
                return dv.getMaDV();
            }
        }
        return null;
    }
    
    private void LoadCBDatat(){
        
        for(NhaCungCap_DTO supplier : list_Supplier){
            JCB_Supplier.addItem(supplier);
        }
        
        
        for(NhanVien_DTO staff : list_Staff){
            JCB_Staff.addItem(staff);
        }
        
        list_Product = product_BUS.getAllProduct();
        for(SanPham_DTO product : list_Product){
            JCB_Product.addItem(product);
        }
        
        
        for(DonVi_DTO dv : list_DV){
            JCB_DVTC.addItem(dv);
        }
    }
    
    private void LoadDataTableNhapKho(List<NhapKho_DTO> listnk){
        defaultTableModel_PNK.setRowCount(0);
        String tenNV;
        String tenNCC;
        for(NhapKho_DTO nk : listnk){
            if(nk.getMaNV() != null){
                tenNV = getNVByMaNV(nk.getMaNV()).getTenNV();
            }
            else{
                tenNV = "Null";
            }
            
            if(nk.getMaNCC()!= null){
                tenNCC = getNCCByMaNCC(nk.getMaNCC()).getTenNCC();
            }
            else{
                tenNCC = "Null";
            }
            String tongTienFormat = String.format("%.0f", nk.getTongTien());
            defaultTableModel_PNK.addRow(new Object[] {"MPNK" + nk.getMaPNK(), nk.getNgayNhap(), tenNV, tenNCC, tongTienFormat});
        }
    }
    
    private void RefreshJFrame(){
        JTF_SLDVTC.setText("");
        defaultTableModel_CTPNK.setRowCount(0);
        JCB_Staff.setEnabled(true);
        JCB_Supplier.setEnabled(true);
        JCB_Product.setEnabled(true);
        JDC_Date.setEnabled(true);
        
    }
    
    private int kiemTraDongTonTaiSP(String maSP){
        int tongDong = JTB_CTPNK.getRowCount();
        
        for(int i = 0; i < tongDong; i++){
            String idsp = (String) defaultTableModel_CTPNK.getValueAt(i, 0);
            if(idsp.compareTo(maSP) == 0){
                return i;
            }
        }
        return -1;
    }
    
    private DonVi_DTO getDonViByTenDV_SP(String tenDV_SP){
        for(DonVi_DTO dv : list_DV){
            if(dv.getTenDV().compareTo(tenDV_SP) == 0){
                return dv;
            }
        }
        return null;
    }
    
    private NhaCungCap_DTO getNCCByMaNCC(String mancc){
        for(NhaCungCap_DTO ncc : list_Supplier){
            if(ncc.getMaNCC().compareTo(mancc) == 0){
                return ncc;
            }
        }
        return null;
    }
    
    private NhanVien_DTO getNVByMaNV(String manv){
        for(NhanVien_DTO nv : list_Staff){
            if(nv.getMaNV().compareTo(manv) == 0){
                return nv;
            }
        }
        return null;
    }
    
    private SanPham_DTO getProductByMaSP(String maSP){
        for(SanPham_DTO sp : list_Product){
            if(sp.getMaSP().compareTo(maSP) == 0){
                return sp;
            }
        }
        return null;
    }
    
    private void eventChangeCBProduct(){
       product_DTO = (SanPham_DTO) JCB_Product.getSelectedItem();
       JCB_DVTC.setSelectedItem(getDonViByTenDV_SP(product_DTO.getDvtChinh())); 
    }
    
    private List<CT_NhapKho_DTO> getDataJTableCTNhapKho(){
        
        List<CT_NhapKho_DTO> listCTNhapKho = new ArrayList<>();
        int soDong = JTB_CTPNK.getRowCount();
        
        for(int i = 0; i < soDong; i++){
            CT_NhapKho_DTO ctNK = new CT_NhapKho_DTO();
            String maSP = String.valueOf(JTB_CTPNK.getValueAt(i, 0));
            int sl = (int) JTB_CTPNK.getValueAt(i, 2);
            String maDVT = getDonViByTenDV_SP(String.valueOf(JTB_CTPNK.getValueAt(i, 3))).getMaDV();
            float thanhTien = Float.parseFloat(String.valueOf(JTB_CTPNK.getValueAt(i, 4)));

            ctNK.setMaSP(maSP);
            ctNK.setSoLuong(sl);
            ctNK.setMaDVT(maDVT);
            ctNK.setThanhTien(thanhTien);
            
            listCTNhapKho.add(ctNK);
        }
        
        return listCTNhapKho;
    }
    
    private float tinhTongTien(){
        float tongTien = 0;
        int soDong = JTB_CTPNK.getRowCount();
        for(int i = 0; i < soDong; i++){
            float thanhTien = Float.parseFloat(String.valueOf(JTB_CTPNK.getValueAt(i, 4))); 
            tongTien += thanhTien;
        }
        
        return tongTien;
    }
    
   
    private TonKho_DTO CheckSPTonTai_GetSP(String maSP){
        list_TK = tk_BUS.getAllTonKho();
        for(TonKho_DTO tk : list_TK){
            if(tk.getMaSP().compareTo(maSP) == 0){
                checkSPTT_TonKho = 1;
                return tk;
            }
        }
        return null;
    }
    
    private String tinhTonKhoQuyDoi(String dvtc, String dvtp, int sltk, int sldvtp){
        int sl_dvtc = sltk/sldvtp;
        int sl_dvtp = 0;
        if(sltk%sldvtp != 0){
            sl_dvtp = sltk - sl_dvtc*sldvtp;
        }
        return sl_dvtc + " " + dvtc + " " + sl_dvtp + " " + dvtp;
    }
    
    private void JBtn_BackHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtn_BackHomeActionPerformed
        JF_Home jF_Home = new JF_Home();
        jF_Home.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_JBtn_BackHomeActionPerformed

    private void JCB_SupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCB_SupplierActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JCB_SupplierActionPerformed

    private void JCB_DVTCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCB_DVTCActionPerformed
        String dvt = String.valueOf(JCB_DVTC.getSelectedItem()).toUpperCase();
        
        JLB_DVT.setText(dvt);
    }//GEN-LAST:event_JCB_DVTCActionPerformed

    private void JBTN_AddOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBTN_AddOrderActionPerformed
        if(JTF_SLDVTC.getText().length() != 0){
            JCB_Staff.setEnabled(false);
            JCB_Supplier.setEnabled(false);
            JDC_Date.setEnabled(false);

            product_DTO = (SanPham_DTO) JCB_Product.getSelectedItem();
            String maSP = product_DTO.getMaSP();
            String tenSP = String.valueOf(JCB_Product.getSelectedItem());
            int slSP = Integer.parseInt(JTF_SLDVTC.getText());
            String dvt = product_DTO.getDvtChinh();
            float thanhTien = product_DTO.getGiaNhap_DVTC()*slSP;
            String thanhTienFormat = String.format("%.0f", thanhTien);

           if(kiemTraDongTonTaiSP(maSP) != -1){
               int soDongTonTai = kiemTraDongTonTaiSP(maSP);
               int sl = (int) JTB_CTPNK.getValueAt(soDongTonTai, 2);
               int capNhatSL = slSP + sl;
               String capNhatThanhTien = String.format("%.0f", product_DTO.getGiaNhap_DVTC() * capNhatSL);

               JTB_CTPNK.setValueAt(capNhatSL, soDongTonTai, 2);
               JTB_CTPNK.setValueAt(capNhatThanhTien, soDongTonTai, 4);
           }
           else{
               defaultTableModel_CTPNK.addRow(new Object[] {maSP , tenSP, slSP, dvt, thanhTienFormat});
           }
        }
        else{
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập số lượng", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_JBTN_AddOrderActionPerformed

    private void JCB_ProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCB_ProductActionPerformed
        eventChangeCBProduct();
    }//GEN-LAST:event_JCB_ProductActionPerformed

    private void JBTN_OrderNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBTN_OrderNewActionPerformed
        RefreshJFrame();
    }//GEN-LAST:event_JBTN_OrderNewActionPerformed

    private void JBTN_DeleteCTPNKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBTN_DeleteCTPNKActionPerformed
        int rowSelected = JTB_CTPNK.getSelectedRow();
        if(rowSelected >= 0){
            defaultTableModel_CTPNK.removeRow(rowSelected);
        }
        else {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn dòng cần xóa", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_JBTN_DeleteCTPNKActionPerformed

    private void JBTN_ConfirmOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBTN_ConfirmOrderActionPerformed
        int rows = JTB_CTPNK.getRowCount();

        String ngayNhap = dateFormatSQL.format(JDC_Date.getDate());
        
        NhanVien_DTO nv = (NhanVien_DTO) JCB_Staff.getSelectedItem();
        String manv = nv.getMaNV();
        NhaCungCap_DTO ncc = (NhaCungCap_DTO) JCB_Supplier.getSelectedItem();
        String mancc = ncc.getMaNCC();
        
        if(rows > 0){
            //tao phieu nhap kho
            NhapKho_DTO nk = new NhapKho_DTO();
            nk.setNgayNhap(ngayNhap);
            nk.setTongTien(tinhTongTien());
            nk.setMaNV(manv);
            nk.setMaNCC(mancc);
            nk_BUS.AddCTPhieuNhapKho(nk);
            LoadDataTableNhapKho(nk_BUS.getAllPhieuNhapKho());
            
            //Lay maPNK
            int tongDong_PNK =  JTB_PNK.getRowCount() - 1;
            String maPNK = String.valueOf(JTB_PNK.getValueAt(tongDong_PNK, 0));
            String maPNKFormat = maPNK.substring(4);
            
            //tao ct_phieu nhap kho 

            for(CT_NhapKho_DTO ctPNK : getDataJTableCTNhapKho()){
               String maSP = ctPNK.getMaSP();
               int sl = ctPNK.getSoLuong();
               ctPNK.setMaPNK(Integer.parseInt(maPNKFormat));
               ctPNK.setMaSP(maSP); 
               ctPNK.setSoLuong(sl);
               ctPNK.setMaDVT(ctPNK.getMaDVT());
               ctPNK.setThanhTien(ctPNK.getThanhTien());
               ctnk_BUS.AddCTPhieuNhapKho(ctPNK);
               
               //Them sp vao ton kho
               CheckSPTonTai_GetSP(maSP);
               TonKho_DTO tk = new TonKho_DTO();
               SanPham_DTO sp = getProductByMaSP(maSP);

               if(checkSPTT_TonKho == 0){
                   tk.setMaSP(maSP);
                   int tongSLTK = sl*sp.getQuiDoi();
                   tk.setSlTon(tongSLTK);
                   String slTKQuyDoi = tinhTonKhoQuyDoi(sp.getDvtChinh(), sp.getDvtPhu(), tongSLTK, sp.getQuiDoi());
                   tk.setSlTonQuiDoi(slTKQuyDoi);
                   tk_BUS.AddTonKho(tk);
               }
               else {
                   int tongSL_TonKhoHienTai = CheckSPTonTai_GetSP(maSP).getSlTon();
                   int tongSL_Nhap = sl*sp.getQuiDoi();
                   int tongSL_Moi = tongSL_TonKhoHienTai + tongSL_Nhap;
                   tk.setMaSP(maSP);
                   tk.setSlTon(tongSL_Moi);
                   String slTKQuyDoi = tinhTonKhoQuyDoi(sp.getDvtChinh(), sp.getDvtPhu(), tongSL_Moi, sp.getQuiDoi());
                   tk.setSlTonQuiDoi(slTKQuyDoi);
                   tk_BUS.UpdateTonKho(tk);
               }
               
               checkSPTT_TonKho = 0;
           }
            
           RefreshJFrame();
        }
        else{
            JOptionPane.showMessageDialog(this, "Không thể tạo phiếu nhập kho", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_JBTN_ConfirmOrderActionPerformed

    private void JBTN_SearchPNKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JBTN_SearchPNKMouseClicked
       if(JDC_DateSearchPNK.getDate() != null){
           String ngayNhap = dateFormatSQL.format(JDC_DateSearchPNK.getDate());
           LoadDataTableNhapKho(nk_BUS.listSearchPNK(ngayNhap));
       }
       else{
           LoadDataTableNhapKho(nk_BUS.getAllPhieuNhapKho());
       }

    }//GEN-LAST:event_JBTN_SearchPNKMouseClicked

    private void JBTN_CTNKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBTN_CTNKActionPerformed
        int row = JTB_PNK.getSelectedRow();
        if(row >=0){
            String maPNK = String.valueOf(JTB_PNK.getValueAt(row, 0));
            String maPNKFormat = maPNK.substring(4);
            new JF_DetailOrder(Integer.parseInt(maPNKFormat)).setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn phiếu nhập kho", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_JBTN_CTNKActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JF_Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JF_Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JF_Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JF_Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JF_Order().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.k33ptoo.components.KButton JBTN_AddOrder;
    private com.k33ptoo.components.KButton JBTN_CTNK;
    private com.k33ptoo.components.KButton JBTN_ConfirmOrder;
    private com.k33ptoo.components.KButton JBTN_DeleteCTPNK;
    private com.k33ptoo.components.KButton JBTN_OrderNew;
    private javax.swing.JLabel JBTN_SearchPNK;
    private com.k33ptoo.components.KButton JBtn_BackHome;
    private javax.swing.JComboBox<DonVi_DTO> JCB_DVTC;
    private javax.swing.JComboBox<SanPham_DTO> JCB_Product;
    private javax.swing.JComboBox<NhanVien_DTO> JCB_Staff;
    private javax.swing.JComboBox<NhaCungCap_DTO> JCB_Supplier;
    private com.toedter.calendar.JDateChooser JDC_Date;
    private com.toedter.calendar.JDateChooser JDC_DateSearchPNK;
    private javax.swing.JLabel JLB_DVT;
    private javax.swing.JTable JTB_CTPNK;
    private javax.swing.JTable JTB_PNK;
    private GUI.JTextFieldCustom JTF_SLDVTC;
    private javax.swing.JLabel JTxt_Header1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
